@page "/EntradasHuacales/Create"
@using P1_AP1_YudelkaTorres.Models
@using P1_AP1_YudelkaTorres.Service
@inject EntradasHuacalesServices EntradasHuacalesService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Crear Entrada de Huacales</PageTitle>
<EditForm Model="Entrada" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
             <div class="card-header text-center">
                   <h5 class="card-title">Crear Entrada de Huacales</h5>
             </div>

            <div class="card-body">
            
                <div class="row">
                    @* EntradaId *@
                    <div class="mb-3">
                        <label class="form-label fw-bold">ID:</label>
                        <InputNumber class="form-control" @bind-Value="Entrada.EntradaId" readonly />
                    </div>

                    @* Fecha *@
                    <div class="mb-3">
                        <label class="form-label fw-bold">Fecha:</label>
                        <InputDate class="form-control" @bind-Value="Entrada.Fecha" />
                        <ValidationMessage For="() => Entrada.Fecha" />
                    </div>

                    @* Cliente *@
                    <div class="mb-3">
                        <label class="form-label fw-bold">Cliente:</label>
                        <InputText class="form-control" @bind-Value="Entrada.NombreCliente" />
                        <ValidationMessage For="() => Entrada.NombreCliente" />
                    </div>

                    @* Cantidad *@
                    <div class="mb-3">
                        <label class="form-label fw-bold">Cantidad:</label>
                        <InputNumber class="form-control" @bind-Value="Entrada.Cantidad" />
                        <ValidationMessage For="() => Entrada.Cantidad" />
                    </div>

                    @* Precio *@
                    <div class="mb-3">
                        <label class="form-label fw-bold">Precio:</label>
                        <InputNumber class="form-control" @bind-Value="Entrada.Precio" />
                        <ValidationMessage For="() => Entrada.Precio" />
                    </div>
                </div>

                @* Importe *@
                <div class="mb-3">
                    <label class="form-label fw-bold">Importe:</label>
                    <input class="form-control bg-light" value="@Importe.ToString("C")" readonly />
                </div>

                @* Footer *@
                <div class="card-footer text-center mt-2">
                    <a href="/EntradasHuacales/Index" class="btn btn-secondary"><span class="bi bi-arrow-left"></span> Volver</a>
                    <button type="submit" class="btn btn-primary bi bi-floppy"> Guardar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

 @if (!string.IsNullOrWhiteSpace(Mensaje))
 {
    <div class="alert alert-warning mt-2">@Mensaje</div>
 }  

@code {
    public EntradasHuacales Entrada { get; set; } = new();
    public string Mensaje { get; set; } = string.Empty;
    public decimal Importe { get; set; }

    private void CalcularImporte(ChangeEventArgs? e = null)
    {
        Importe = Entrada.Cantidad * Entrada.Precio;
    }

    private async Task Guardar()
    {
        if (Entrada.Cantidad <= 0 || Entrada.Precio <= 0)
        {
            Mensaje = "La cantidad y el precio deben ser mayores a cero.";
            return;
        }

        bool guardado = await EntradasHuacalesService.Guardar(Entrada);

        if (guardado)
        {
            NavigationManager.NavigateTo("/EntradasHuacales/Index");
        }
        else
        {
            Mensaje = "Ocurrió un error al guardar la entrada.";
        }
    }
}

